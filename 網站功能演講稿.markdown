# 用戶系統網站演講稿

以下是關於用戶系統網站的詳細演講內容，涵蓋網站的整體架構、功能、AI特性、技術實現以及使用說明，旨在向聽眾全面介紹網站的設計與價值。

## 開場白
大家好！今天我很高興為大家介紹我們的用戶系統網站，這是一個專為高效文件管理與分享設計的平台。該網站不僅提供直觀的文件上傳、分享與搜尋功能，還整合了先進的AI技術，讓用戶能夠輕鬆管理文件並發現相關內容。接下來，我將詳細介紹網站的功能、技術實現以及如何操作。

## 1. 網站概述

### 1.1 網站目的
用戶系統網站旨在提供一個安全、便捷的文件管理平台，讓用戶可以：
- 上傳、組織和管理文本與PDF文件。
- 通過文件夾和分享功能與他人協作。
- 利用AI技術進行智能文件搜尋和推薦，提升效率。

### 1.2 網站結構
網站採用前後端分離的設計，包含以下核心部分：
- **前端**：使用HTML、CSS和JavaScript（jQuery），提供響應式用戶界面，基於 `index.html`、`dashboard.html` 和 `folder_files.html` 等頁面。
- **後端**：使用Python的Flask框架，通過 `server.py` 處理API請求，實現文件管理與AI功能。
- **資料庫**：使用SQLite（`database.db`）儲存用戶信息、文件元數據和AI嵌入向量。
- **AI模型**：整合 `sentence-transformers`（`all-MiniLM-L6-v2`）進行語義分析。

## 2. 核心功能介紹

### 2.1 用戶認證
- **功能**：用戶可註冊、登錄和登出，確保文件訪問的安全性。
- **實現**：
  - 註冊：通過 `/api/register` 端點，驗證用戶輸入並將密碼哈希儲存到 `users` 表。
  - 登錄：通過 `/api/login` 端點，檢查用戶憑證並生成會話。
  - 登出：清除會話，確保安全。
- **操作**：
  1. 訪問首頁（`index.html`），點擊「註冊」或「登錄」。
  2. 輸入用戶名和密碼，完成認證後進入儀表板。

### 2.2 文件上傳與管理
- **功能**：用戶可上傳文本或PDF文件，管理個人文件和文件夾。
- **實現**：
  - 文件上傳通過 `/api/upload` 端點，儲存到 `uploads/<username>` 目錄。
  - 文件元數據（文件名、路徑、擁有者等）儲存在 `files` 表。
  - 支持創建文件夾（`/api/create_folder`）和移動文件到文件夾（`/api/move_file`）。
- **操作**：
  1. 在儀表板（`dashboard.html`）點擊「上傳文件」，選擇文件並上傳。
  2. 在「已上傳文件」區塊查看文件，點擊「移動到文件夾」或「刪除」進行管理。

### 2.3 文件分享
- **功能**：用戶可將文件設為公開或分享給特定用戶。
- **實現**：
  - 公開分享：通過 `/api/share/<file_id>` 將文件設為公開。
  - 特定用戶分享：通過 `/api/share/<file_id>` 指定目標用戶。
  - 資料庫的 `file_shares` 表記錄分享關係。
- **操作**：
  1. 在「已上傳文件」區塊，點擊文件的「分享」按鈕。
  2. 選擇「公開分享」或輸入目標用戶名進行分享。
  3. 分享後，其他用戶可在「共享給我的文件」區塊查看。

### 2.4 文件夾管理
- **功能**：用戶可創建文件夾並組織文件。
- **實現**：
  - 文件夾元數據儲存在 `folders` 表，記錄名稱和擁有者。
  - 文件與文件夾的關聯儲存在 `folder_files` 表。
- **操作**：
  1. 在儀表板點擊「創建文件夾」，輸入名稱。
  2. 在文件列表中選擇文件，點擊「移動到文件夾」並選擇目標文件夾。

## 3. AI功能介紹

### 3.1 AI搜尋文件內容
- **功能**：用戶輸入關鍵詞，AI根據語義查找相關文件。
- **運作原理**：
  - 使用 `sentence-transformers` 模型將查詢和文件內容轉為嵌入向量。
  - 計算查詢與文件嵌入向量的餘弦相似度，篩選相似度>0.1的文件。
  - 結果按相似度排序，返回文件名、擁有者等信息。
- **操作**：
  1. 在儀表板輸入搜尋詞，點擊「AI搜尋」。
  2. 查看結果並下載所需文件。

### 3.2 AI推薦相似文件
- **功能**：根據用戶選擇的文件，推薦相似內容的文件。
- **運作原理**：與AI搜尋類似，比較指定文件與其他文件的嵌入向量，篩選相似度高的結果。
- **操作**：
  1. 在文件列表點擊「AI推薦相似文件」。
  2. 查看「AI推薦文件(指定文件)」區塊的結果。

### 3.3 AI推薦文件(上載文件)
- **功能**：自動推薦與最近上傳文件相似的文件。
- **運作原理**：後端自動選取最新上傳文件，進行相似度比較。
- **操作**：
  1. 登錄後，儀表板自動顯示推薦結果。
  2. 查看並下載推薦文件。

### 3.4 AI推薦文件(指定文件)
- **功能**：與「AI推薦相似文件」功能相同，強調用戶主動選擇文件。
- **運作原理**：同上。
- **操作**：同「AI推薦相似文件」。

## 4. 技術細節

### 4.1 前端
- **技術棧**：HTML、CSS、JavaScript（jQuery）。
- **頁面**：
  - `index.html`：首頁，提供登錄和註冊入口。
  - `dashboard.html`：主儀表板，顯示文件管理、AI功能等。
  - `folder_files.html`：顯示文件夾內文件。
- **交互**：通過AJAX調用後端API，動態更新頁面內容。

### 4.2 後端
- **技術棧**：Flask、SQLite、sentence-transformers。
- **核心API**：
  - `/api/upload`：處理文件上傳和嵌入向量生成。
  - `/api/ai_search`：執行AI搜尋。
  - `/api/recommend` 和 `/api/recommend/<file_id>`：處理AI推薦。
- **文件處理**：
  - 文本文件直接讀取內容，PDF使用 `PyPDF2` 提取文本。
  - 嵌入向量以二進制形式儲存，節省空間。

### 4.3 資料庫
- **結構**：
  - `users`：儲存用戶信息（ID、用戶名、密碼哈希）。
  - `files`：儲存文件元數據和嵌入向量。
  - `folders`：儲存文件夾信息。
  - `file_shares` 和 `folder_files`：記錄分享和文件夾關聯。
- **安全性**：密碼使用 `bcrypt` 哈希，文件訪問權限嚴格控制。

### 4.4 AI模型
- **模型**：`sentence-transformers/all-MiniLM-L6-v2`，輕量高效，適合語義分析。
- **依賴**：`requirements.txt` 中列出 `sentence-transformers`、`PyPDF2` 等庫。

## 5. 使用場景
- **個人文件管理**：上傳工作文檔，通過文件夾組織，快速搜尋。
- **團隊協作**：分享文件給同事，查看共享文件，發現相關資料。
- **研究與學習**：利用AI搜尋和推薦功能，快速找到相關參考文獻。

## 6. 操作演示
1. **註冊與登錄**：訪問首頁，註冊新賬戶並登錄。
2. **上傳文件**：在儀表板上傳PDF或文本文件。
3. **AI搜尋**：輸入關鍵詞，查看搜尋結果。
4. **AI推薦**：選擇文件，查看相似文件推薦。
5. **文件分享**：將文件設為公開或分享給特定用戶。
6. **文件夾管理**：創建文件夾並移動文件。

## 7. 優勢與價值
- **高效性**：AI功能減少手動搜尋時間。
- **安全性**：嚴格的權限控制和密碼保護。
- **易用性**：直觀的界面，適合各類用戶。
- **可擴展性**：Flask和SQLite支持未來功能擴展。

## 8. 結語
用戶系統網站通過結合傳統文件管理與AI技術，為用戶提供了一個強大而便捷的平台。無論是個人管理還是團隊協作，網站都能顯著提升效率。我們期待聽眾體驗並提供反饋，幫助我們進一步完善！

感謝大家的聆聽！有任何問題，歡迎提問！